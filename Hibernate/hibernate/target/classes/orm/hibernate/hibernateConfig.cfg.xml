<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM 
"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!-- Version 8 MySQL hiberante-cfg.xml example for Hibernate 5 -->
<hibernate-configuration>
  <session-factory>
  <!-- Driver name -->
    <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>
    <!-- property name="connection.driver_class">com.mysql.jdbc.Driver</property -->
    <property name="connection.url">jdbc:mysql://localhost:3306/myhibernatedb</property>
    <!-- 
    a "dialect" is a configuration setting that specifies the type of database you are using. 
    It tells Hibernate how to generate the appropriate SQL statements for your particular database system,
     as different databases have different SQL syntax, data types, and functions.
     -->
    <property name="dialect">org.hibernate.dialect.MySQLDialect</property>
    <property name="connection.username">root</property>
    <property name="connection.password">Meetpandya40@</property>
<!--     <property name="connection.pool_size">3</property>
 -->    <!--property name="dialect">org.hibernate.dialect.MySQLDialect</property-->
<!--     <property name="current_session_context_class">thread</property>
 -->    
 	<!-- 
 	show sql =  true states that whatever hibernate fires the query it will show in the console.
 	 -->
    <property name="show_sql">true</property>
    <property name="format_sql">true</property>
    
    <!-- 
    When we use create , it will create table , but if existing tables are there those will get deleted
    and again will get created. So it is better to use update over create. It will create only once if
    table does not exists.
     -->
    <property name="hbm2ddl.auto">update</property>
    
     <!-- Second Level Cache provider configurations -->
     <!-- by default second level cache is false -->
    <property name="hibernate.cache.use_second_level_cache">true</property>
    <property name="hibernate.cache.use_query_cache">true</property>
    
    <!-- Post enabling second level cache we need to provide provider name for second level cache -->
    <property name="hibernate.cache.region.factory_class">
        org.hibernate.cache.ehcache.EhCacheRegionFactory
    </property>
    
    <!-- mapping class="com.mcnz.jpa.examples.Player" / -->
    <mapping class="orm.hibernate.annotation.Student"/>
    <mapping class="orm.hibernate.annotation.Address"/>
    <mapping class="orm.hibernate.annotation.Employee"/>
    <mapping class="orm.hibernate.annotation.onetoone.Personal" />
    <mapping class="orm.hibernate.annotation.onetoone.Payroll" /> 
     <mapping class="orm.hibernate.annotation.onetomany.Customer" />
    <mapping class="orm.hibernate.annotation.onetomany.CustomerOrder" />
   <mapping class="orm.hibernate.annotation.manytomany.EmployeeProjects" />
    <mapping class="orm.hibernate.annotation.manytomany.Projects" />    
    <mapping class="orm.hibernate.hql.Paginator" />    
  </session-factory>
</hibernate-configuration>